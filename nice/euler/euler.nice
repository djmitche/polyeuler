/**
 * Euler #1
 * Answer: 233168
 * 
 * If we list all the natural numbers below 10 that are multiples of 3 or 5,
 * we get 3, 5, 6 and 9. The sum of these multiples is 23.
 * 
 * Find the sum of all the multiples of 3 or 5 below 1000.
 */
int euler1() {
    int sum = 0;
    for (int i=3; i<1000; i++) {
        if ((i % 3 == 0) || (i % 5 == 0)) {
            sum += i;
        }
    }
    return sum;
}

/**
 * Euler #2
 * Answer: 4613732
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * Find the sum of all the even-valued terms in the sequence which do not
 * exceed four million.
 */
int euler2() {
    int n = 2, a = 1, b = 2;
    while (true) {
        int c = a + b;
        if (4000000 <= c) {
            break;
        }
        if (0 == c % 2) {
            n += c;
        }
        a = b;
        b = c;
    }
    return n;
}


void main(String[] args)
{
    if (args.length > 0) {
        System.out.println("TODO: Specific args...");
    } else {
        // TODO: dynamisize
        System.out.println("#1: " + euler1());
        System.out.println("#1: " + euler2());
    }
}
